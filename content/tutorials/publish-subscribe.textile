---
title: Publish & Subscribe Tutorial
section: tutorials
index: 10
---

blang[javascript].
  The complete source code for each step of "this tutorial is available on Github":https://github.com/ably/tutorials/commits/publish-subscribe-javascript

blang[ruby].
  The complete source code for each step of "this tutorial is available on Github":https://github.com/ably/tutorials/commits/publish-subscribe-ruby

h2. Step 1 - Install Ably

blang[javascript].
  To start using Ably you first need to include the Ably library in your browser. We recommend that you use the client library from our CDN as it will always be up to date. The client library must be instanced with an API key ("which you can find in your dashboard":https://support.ably.io/support/solutions/articles/3000030502-setting-up-and-managing-api-keys), or using "token authentication":/general/authentication#token-authentication. In this example, we use an API key for simplicity.

  Include the code below just before your closing your HTML @</body>@ tag.

  ```[javascript]
    <!-- Include the Ably Library -->
    <script src="//cdn.ably.io/lib/ably-0.8.min.js"></script>

    <!-- Instance the Ably library  -->
    <script type="text/javascript">
      var realtime = Ably.Realtime.new(apiKey);
    </script>
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/eceb9b8dc2c796e771b251de791cf9869fbef185

blang[ruby].
  To start using Ably you first need to install the Ably RubyGem. The RubyGem can be installed as follows:

  ```[sh]
  gem install ably
  ```

  Or if using bundler, simply add the following to your Gemfile and run @bundle install@:

  ```[ruby]
  gem 'ably'
  ```

  The client library must be instanced with an API key ("which you can find in your dashboard":https://support.ably.io/support/solutions/articles/3000030502-setting-up-and-managing-api-keys), or using "token authentication":/general/authentication#token-authentication. In this example, we use an API key for simplicity.

  The Ruby realtime library uses "EventMachine":https://github.com/eventmachine/eventmachine to run the client library within an event loop. Add the following to a file named @server.rb@ to start Ably inside an EventMachine reactor:

  ```[javascript]
    require 'ably'

    EventMachine.run do
      ably = Ably::Realtime.new(key: api_key)
    end
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/4f6d98952ed12c09d392dc8588d34ff185464f4a

h2. Step 2 - Subscribe to messages

Now that the library is installed, you can subscribe to data published on any channel. Every channel is isolated for each other and you can use any arbitrary number of channels to publish your data. For example, if building a news feed, you may want one channel for politics named "politics", and another for sport named "sport"

blang[javascript].
  ```[javascript]
    var channel = ably.channels.get("sport");
    channel.subscribe(function(msg) {
      console.log(msg.data);
    });
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/76eeb69b0a823e0507bf675ba1de6168679b9d2c

blang[ruby].
  ```[ruby]
    channel = ably.channels.get('sport')
    channel.subscribe do |msg|
      puts msg.data
    end
  ```

  "See this step in Github":https://github.com/ably/tutorials/commit/0f663ecd426d917cd970c1626edde7ecee525fef

h2(#live-demo). Live demo

<div id="qr-code" style="float: right; margin: 0 0 15px 15px; width: 200px; display: none; text-align: center">
  <div style="margin-top: 5px">Scan this on your mobile</div>
</div>

<a href="#" id="new-browser" target="_blank">Open this demo in a new browser window</a> to see publish & subscribe in action.  Alternatively, scan the QR code to see the published message delivered in real time.

<div>
  <div>
    Message: <input type="text" id="message-text" value="Wowser, that was fast"> <button id="send-message">Send a message</button>
  </div>
  <textarea id="result" rows="7" style="width: 60%; margin-top: 10px; font-family: courier, courier new; background-color: #333; color: orange" disabled></textarea>
</div>

<img src="/images/ably-logo-white-outline.png" id="ably-qr-logo" style="visibility: hidden; width: 1px; height: 1px">

<script src="//cdn.ably.io/lib/ably.min.js"></script>
<script src="https://apis.google.com/js/api.js"></script>
<script type="text/javascript">
  $(function() {
    var $result = $('#result'),
        ably = new Ably.Realtime({ authUrl: 'https://www.ably.io/ably-auth/token/docs' });
        channelName = getQueryParam('channel') || getRandomChannelName(),
        channel = ably.channels.get(channelName);

    ably.connection.on('connected', function() {
      $result.text("[Connected to Ably, waiting...]\n" + $result.text());
    });

    channel.subscribe(function(msg) {
      $result.text("[Received] " + msg.data + "\n" + $result.text());
    });

    $('button#send-message').on('click', function() {
      var text = $('input#message-text').val();
      channel.publish('msg', text);
    });

    /* Set up the link to open a new window with this random channel name */
    var urlWithChannel = document.location.href;
    if (urlWithChannel.indexOf('channel=') < 0) {
      urlWithChannel += (urlWithChannel.indexOf('?') < 0 ? '?' : '&') + "channel=" + escape(channelName);
    }
    $('a#new-browser').attr('href', urlWithChannel);

    function setupQrCode() {
      var request = gapi.client.urlshortener.url.insert({
        'longUrl': urlWithChannel + "#live-demo"
      });
      request.then(function(response) {
        console.log(response.result.id);
        var qr = kjua({ text: response.result.id, size: 200, ecLevel: 'H', mode: 'image', image: $('img#ably-qr-logo')[0] });
        $('#qr-code').show().prepend(qr);
      }, function(reason) {
        console.error('Error: ' + reason.result.error.message);
      });
    }

    /* Set up QR code with a short URL from goo.gl */
    function init() {
      gapi.client.setApiKey('AIzaSyDXq2c1JjZTSUrzPZESxf4XP_tRu-N8r3A');
      gapi.client.load('urlshortener', 'v1').then(setupQrCode);
    }

    gapi.load('client', init);
  });
</script>
